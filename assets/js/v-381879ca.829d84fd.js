(self.webpackChunkblog=self.webpackChunkblog||[]).push([[38],{1818:(e,r,a)=>{"use strict";a.r(r),a.d(r,{data:()=>t});const t={key:"v-381879ca",path:"/Framework/",title:"概览",lang:"zh-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"Framework/README.md"}},5548:(e,r,a)=>{"use strict";a.r(r),a.d(r,{default:()=>l});const t=(0,a(6252).uE)('<h1 id="概览" tabindex="-1"><a class="header-anchor" href="#概览" aria-hidden="true">#</a> 概览</h1><p>库(Library)：库，本质上是一些函数的集合。每次调用函数，实现一个特定的功能，接着把<code>控制权</code>交给使用者，使用者不用去考虑兼容问题，库已经把所有兼容问题封装在函数里面。</p><p>框架(Framework)：框架，是一套完整的解决方案，使用框架的时候，你需要按照框架规则去写自己的代码，而不能随意去按照自己规则去写，这样框架才能去调用你的代码。</p><p>主要区别:</p><ol><li>是你在操作还是你被操作。</li><li>谁起到主导作用，框架控制整个流程，而库是由开发人员决定是否去掉用（没有主导权）</li><li>框架的侵入性很高而库可以随时删除不用。</li></ol>',5),l={render:function(e,r){return t}}}}]);